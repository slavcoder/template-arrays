{
    "all": [
        {
            "title": "What are template arrays?",
            "author": "slavcoder",
            "content": [
                ["p", {"class": "paragraph"}],
                    "This is an experimental concept of rendering HTML by JavaScript arrays. I believe it may be useful in some JavaScript libraries or maybe even for a simple templates like in this example.",
                ["/p"],
                ["h3"],"How it works?",["/h3"],
                ["p"],
                    "The idea is simple. Let's look right into example. A template array could look like this:",
                    ["pre"],
                        "const exampleArray = [\n",
                        "    ['h1', {attr:'heading', id:'heading'}],\n",
                        "        'heading text',\n",
                        "    ['/h1'],\n",
                        "    ['div'],\n",
                        "        ['p', {class:'paragraph'}],\n",
                        "            {var:'paragraph'},\n",
                        "        ['/p'],\n",
                        "        ['a', {href:'#'}],`link text`,['a'],\n",
                        "    ['/div']\n",
                        "]",
                    ["/pre"],
                ["/p"],
                ["p", {"class": "paragraph"}],
                    "As you can see, it is a valid JavaScript array.",
                ["/p"],
                ["p", {"class": "paragraph"}],
                    "HTML tags are represented by opening tag name plus list of its attributes <code>['h1', {id:'heading'}]</code>, and the closing tag name <code>['/h1']</code>",
                ["/p"],
                ["p", {"class": "paragraph"}],
                    "Text is presented by simple 'string' or `template string`",
                ["/p"],
                ["p", {"class": "paragraph"}],
                    "Object literals are used as variables <code>{var:'paragraph'}</code>. Each time you render new HTML by using template arrays you can easily put another template array or plain text in place of this literals.",
                ["/p"],
                ["p", {"class": "paragraph"}],
                    "Even though it may look more complicated than template strings, I think it gives more flexibility and clarity.",
                ["/p"],
                ["p", {"class": "paragraph"}],
                    "The render function which you have to import takes two arguments: array and object. Rendering the example above could look like this:<br>",
                ["/p"],
                ["pre"],
                    "document.body.innerHTML = render(exampleArray, {\n",
                    "    attr: {\n",
                    "        heading: {\n",
                    "            class: 'heading',\n",
                    "            style: 'color: red;'\n",
                    "        }\n",
                    "    },\n",
                    "    var: {\n",
                    "        paragraph: [ ['span'],'lorem',['/span'] ]\n",
                    "    }\n",
                    "})",
                ["/pre"],
                ["p", {"class": "paragraph"}],
                    "The <b>attr</b> is used to update attributes and the <b>var</b> is used to insert some other template array or string.",
                ["/p"]
            ]
        },
        {
            "title": "Advanteges of template arrays",
            "author": "slavcoder",
            "content": [
                ["p"],
                    "\"Using arrays to render HTML? Is there a doctor in this file?\"",
                ["p"],
                ["p"],"<b>Advanteges:</b>",["p"],
                ["ul", {"class": "paragraph"}],
                    ["li"],"you can use it inside .json file (this article is an example of it) and still use <b>var</b> and <b>attr</b> to change parts of its content and attributes of elements just before render HTML",
                    ["li"],"easy to use - no need function for every template, <b>template arrays</b> are ready to use after you define them",["/li"],
                    ["li"],"easy to learn, it is basicly <b>HTML</b> inside arrays",
                    ["li"],"it is pretty fast way to create HTML inside JavaScript, test below is: ",["/li"],
                ["/ul"],
                ["p"],"<b>Let's render some elements!</b><br>The test below is:",["/p"],
                ["ul"],
                    ["li"],"up to <b>10 000</b> span elements",["/li"],
                    ["li"],"each element have random background color",["/li"],
                    ["li"],"you can generate elements in an order from lightest to darkest and vice versa",["/li"],
                    ["li"],"you can check rendering time in console (it depends on your machine obviously and can be much faster without this ridiculous color calculations I made)",["/li"],
                ["/ul"]
            ]
        }
    ]
}